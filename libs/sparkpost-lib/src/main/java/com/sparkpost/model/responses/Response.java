package com.sparkpost.model.responses;

import java.lang.reflect.Type;

import com.google.gson.Gson;
import com.google.gson.annotations.SerializedName;
import com.sparkpost.model.Base;
import com.yepher.jsondoc.annotations.Description;

import lombok.Data;
import lombok.EqualsAndHashCode;

/**
 * The response for the SparkPost server, as returned by @a RestConnection
 *
 */
@Data
@EqualsAndHashCode(callSuper = true)
public class Response extends Base {

	@Description(value="The URI of the request")
	private String request = null;
	
	@Description(value="Request Identifier")
	private String requestId = null;
	
	@Description(value="HTTP Response Code generated by request",sample={"200"})
	private int responseCode = -1;
	
	@Description(value="The HTTP Message generated by request",sample={"OK"})
	private String responseMessage = null;
	
	@Description(value="The json of the response")
	@SerializedName("json")
	private String responseBody = null;
	
	public static <T extends Response> T decode(Response response, Type typeOfT) {
		Gson gson = new Gson();
		
		T newResponse = gson.fromJson(response.getResponseBody(), typeOfT);
		if (newResponse != null) {
			newResponse.setRequest(response.request);
			newResponse.setRequestId(response.requestId);
			newResponse.setResponseCode(response.responseCode);
			newResponse.setResponseBody(response.responseBody);
			newResponse.setResponseMessage(response.responseMessage);
		}
		
		return (T) newResponse;
	}
	
}
